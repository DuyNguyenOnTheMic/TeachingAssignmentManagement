@model TeachingAssignmentManagement.Models.term

@{
    Layout = null;
}

@using (Html.BeginForm("Create", "Term", FormMethod.Post, new { onsubmit = "return submitForm(this)", id = "term-form" }))
{
    <div class="mb-1">
        <label class="form-label font-small-4" for="id">Học kỳ: </label>
        <input type="number" class="form-control" id="id" name="id" placeholder="Nhập học kỳ (VD: 221)" aria-label="Nhập học kỳ (VD: 221)" />
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="name">Năm bắt đầu: </label>
        <input type="number" class="form-control" id="start_year" name="start_year" placeholder="Nhập năm bắt đầu" aria-label="Nhập năm bắt đầu" />
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="name">Năm kết thúc: </label>
        <input type="number" class="form-control" id="end_year" name="end_year" placeholder="Nhập năm kết thúc" aria-label="Nhập năm kết thúc" />
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="name">Tuần bắt đầu: </label>
        <div class="input-group">
            <input type="number" class="touchspin-min-max" id="start_week" name="start_week" value="1" aria-label="Nhập tuần bắt đầu" />
        </div>
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="name">Ngày bắt đầu: </label>
        <input type="date" class="form-control" id="start_date" name="start_date" placeholder="Nhập ngày bắt đầu" aria-label="Nhập ngày bắt đầu" />
    </div>

    <div class="float-end m-1">
        <button type="button" class="btn btn-outline-secondary waves-effect me-1" id="btnClose">Huỷ</button>
        <button type="submit" class="btn btn-primary waves-effect waves-float waves-light">Lưu</button>
    </div>
}

<link rel="stylesheet" type="text/css" href="~/app-assets/css/plugins/forms/form-validation.min.css" />
<script src="~/assets/js/form-validation.min.js"></script>
<script>
    // Default Spin
    $('.touchspin').TouchSpin({
        buttondown_class: 'btn btn-primary',
        buttonup_class: 'btn btn-primary',
        buttondown_txt: feather.icons['minus'].toSvg(),
        buttonup_txt: feather.icons['plus'].toSvg()
    });

    var touchspinValue = $('.touchspin-min-max'),
        counterMin = 1,
        counterMax = 52;
    if (touchspinValue.length > 0) {
        touchspinValue
            .TouchSpin({
                min: counterMin,
                max: counterMax,
                buttondown_txt: feather.icons['minus'].toSvg(),
                buttonup_txt: feather.icons['plus'].toSvg()
            })
            .on('touchspin.on.startdownspin', function () {
                var $this = $(this);
                $('.bootstrap-touchspin-up').removeClass('disabled-max-min');
                if ($this.val() == counterMin) {
                    $(this).siblings().find('.bootstrap-touchspin-down').addClass('disabled-max-min');
                }
            })
            .on('touchspin.on.startupspin', function () {
                var $this = $(this);
                $('.bootstrap-touchspin-down').removeClass('disabled-max-min');
                if ($this.val() == counterMax) {
                    $(this).siblings().find('.bootstrap-touchspin-up').addClass('disabled-max-min');
                }
            });
    }
</script>