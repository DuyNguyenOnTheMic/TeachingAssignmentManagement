@model TeachingAssignmentManagement.Models.term

@{
    Layout = null;
}

@using (Html.BeginForm("Create", "Term", FormMethod.Post, new { onsubmit = "return submitForm(this)", id = "term-form" }))
{
    <div class="mb-1">
        <label class="form-label font-small-4" for="id">Học kỳ: </label>
        <input type="number" class="form-control" id="id" name="id" placeholder="Nhập học kỳ (VD: 221)" aria-label="Nhập học kỳ (VD: 221)" />
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="start_year">Năm bắt đầu: </label>
        <select class="form-select" id="start_year" name="start_year" aria-label="Nhập năm bắt đầu"></select>
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="end_year">Năm kết thúc: </label>
        <input type="number" class="form-control" id="end_year" name="end_year" placeholder="Nhập năm kết thúc" aria-label="Nhập năm kết thúc" />
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="start_week">Tuần bắt đầu: </label>
        <div class="input-group">
            <input type="number" class="touchspin-min-max" id="start_week" name="start_week" value="1" aria-label="Nhập tuần bắt đầu" />
        </div>
    </div>

    <div class="mb-1">
        <label class="form-label font-small-4" for="start_date">Ngày bắt đầu: </label>
        <input type="text" class="form-control picker" id="start_date" name="start_date" placeholder="Nhập ngày bắt đầu" aria-label="Nhập ngày bắt đầu" />
    </div>

    <div class="float-end m-1">
        <button type="button" class="btn btn-outline-secondary waves-effect me-1" id="btnClose">Huỷ</button>
        <button type="submit" class="btn btn-primary waves-effect waves-float waves-light">Lưu</button>
    </div>
}

<link rel="stylesheet" type="text/css" href="~/app-assets/vendors/css/pickers/flatpickr/flatpickr.min.css" />
<link rel="stylesheet" type="text/css" href="~/app-assets/css/plugins/forms/form-validation.min.css" />
<link rel="stylesheet" type="text/css" href="~/app-assets/css/plugins/forms/pickers/form-flat-pickr.min.css" />
<script src="~/app-assets/vendors/js/pickers/flatpickr/flatpickr.min.js"></script>
<script src="~/assets/js/form-validation.min.js"></script>
<script>

    var touchspin = $('.touchspin'),
        picker = $('.picker'),
        startYear = $('#start_year');

    //Determine the Current Year.
    var currentYear = (new Date()).getFullYear();

    //Loop and add the Year values to DropDownList.
    for (var i = currentYear; i <= currentYear + 10; i++) {
        startYear.append('<option value="' + i + '">' + i + '</option>');
    }

    // Default Spin
    touchspin.TouchSpin({
        buttondown_class: 'btn btn-primary',
        buttonup_class: 'btn btn-primary',
        buttondown_txt: feather.icons['minus'].toSvg(),
        buttonup_txt: feather.icons['plus'].toSvg()
    });

    var touchspinValue = $('.touchspin-min-max'),
        counterMin = 1,
        counterMax = 52;
    if (touchspinValue.length > 0) {
        touchspinValue
            .TouchSpin({
                min: counterMin,
                max: counterMax,
                buttondown_txt: feather.icons['minus'].toSvg(),
                buttonup_txt: feather.icons['plus'].toSvg()
            })
            .on('touchspin.on.startdownspin', function () {
                var $this = $(this);
                $('.bootstrap-touchspin-up').removeClass('disabled-max-min');
                if ($this.val() == counterMin) {
                    $(this).siblings().find('.bootstrap-touchspin-down').addClass('disabled-max-min');
                }
            })
            .on('touchspin.on.startupspin', function () {
                var $this = $(this);
                $('.bootstrap-touchspin-down').removeClass('disabled-max-min');
                if ($this.val() == counterMax) {
                    $(this).siblings().find('.bootstrap-touchspin-up').addClass('disabled-max-min');
                }
            });
    }

    // Custom vietnamese language for flatpickr
    var customLocale = {
        weekdays: {
            shorthand: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
            longhand: [
                "Chủ nhật",
                "Thứ hai",
                "Thứ ba",
                "Thứ tư",
                "Thứ năm",
                "Thứ sáu",
                "Thứ bảy",
            ],
        },

        months: {
            shorthand: [
                "Th1",
                "Th2",
                "Th3",
                "Th4",
                "Th5",
                "Th6",
                "Th7",
                "Th8",
                "Th9",
                "Th10",
                "Th11",
                "Th12",
            ],
            longhand: [
                "Tháng một",
                "Tháng hai",
                "Tháng ba",
                "Tháng tư",
                "Tháng năm",
                "Tháng sáu",
                "Tháng bảy",
                "Tháng tám",
                "Tháng chín",
                "Tháng mười",
                "Tháng mười một",
                "Tháng mười hai",
            ],
        },
        firstDayOfWeek: 1
    };

    // Picker
    if (picker.length) {
        picker.flatpickr({
            locale: customLocale,
            formatDate: dateObj => dateObj.toLocaleDateString(),
            onReady: function (selectedDates, dateStr, instance) {
                if (instance.isMobile) {
                    $(instance.mobileInput).attr('step', null);
                }
            },
        });
    }
</script>